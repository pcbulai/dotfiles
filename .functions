### Functions ###

# Change the ownership of a given folder
# Usage: godmode <option> <target_directory>
godmode(){
  option=""
  target="./"
  if [ ! -z "${1}" ]; then
    option="${1}"
  fi
  if [ ! -z "${2}" ]; then
    target="${2}"
  fi

  sudo chmod 777 ${target} ${option}
}

# Extract archives
# Usage: extract <file>
extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjvf $1    ;;
      *.tar.gz)    tar xzvf $1    ;;
      *.bz2)       bzip2 -d $1    ;;
      *.rar)       unrar2dir $1    ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1    ;;
      *.tgz)       tar xzf $1    ;;
      *.zip)       unzip2dir $1     ;;
      *.Z)         uncompress $1    ;;
      *.7z)        7z x $1    ;;
      *.ace)       unace x $1    ;;
      *)           echo "'$1' cannot be extracted via extract()"   ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Back up a file.
# Usage: bkp <filename>
bkp () {
  cp $1 ${1}-`date +%Y%m%d%H%M`.backup;
  echo '\nFile' ${1}-`date +%Y%m%d%H%M`.backup 'was created';
}

# mkmv - creates a new directory and moves the file into it, in 1 step
# Usage: mkmv <filename> <directory>
mkmv() {
  mkdir "$2"
  mv "$1" "$2"
}


# Create a directory and go there
mkcd () {
  mkdir $@ && cd $@
}

# Kills any process that matches a regexp passed to it
kill() {
  ps aux | grep -v "grep" | grep "$@" | awk '{print $2}' | xargs sudo kill
}


# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.

if [ -z "\${which tree}" ]; then
  tree () {
    find $@ -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
  }
fi

tre() {
	tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}

git:new-branch () {
  git checkout -b $1/pb/$2;
  echo 'Happy coding!'
}

git:push() {
  currentBranch=$(git rev-parse --abbrev-ref HEAD)
  git push origin $currentBranch;
}

git:ammend() {
  git commit --amend --date="$@" --no-edit && GIT_COMMITTER_DATE="$@" git commit --amend --no-edit
}

